<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7f4a24e0-a5e9-468f-b80d-58fd493c4a4e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/assets/icons/loader.svg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/auth/login/lib/schema.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/auth/registration/lib/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/auth/registration/lib/schema.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/setAvatar/ui/SetAvatar.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/setAvatar/ui/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/notFound/NotFound.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/notFound/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/profile/Profile.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/profile/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/api/user/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/api/user/resources.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/api/user/types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/avatar/Avatar.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/avatar/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/error/Error.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/error/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/loader/Loader.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/ui/loader/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.env.example" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/footer/Footer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/footer/Footer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/header/Header.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/header/Header.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/session/model/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/session/model/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/session/model/sessionModel.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/session/model/sessionModel.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/login/lib/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/login/lib/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/login/model/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/login/model/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/login/model/loginModel.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/login/model/LoginModel.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/login/ui/Login.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/login/ui/Login.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/registration/model/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/registration/model/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/registration/model/registrationModel.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/registration/model/registrationModel.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/auth/registration/ui/Registration.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/auth/registration/ui/Registration.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/TournamentList/TournamentList.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/TournamentList/TournamentList.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/main/Main.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/main/Main.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/tournamentPage/TournamentPage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/tournamentPage/TournamentPage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/routing/Router.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/routing/Router.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/routing/privateRoute/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/routing/privateRoute/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/api/apiAxios.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/api/apiAxios.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/api/auth/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/api/auth/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/api/auth/resources.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/api/auth/resources.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/api/auth/types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/api/auth/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/lib/auth/auth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/lib/auth/auth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/baseButton/BaseButton.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/ui/baseButton/BaseButton.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/baseCheckbox/BaseCheckBox.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/baseCheckbox/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/baseInput/BaseInput.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/ui/baseInput/BaseInput.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/formContainer/FormContainer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/ui/formContainer/FormContainer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/ui/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/ui/wrapper/Wrapper.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/shared/ui/wrapper/Wrapper.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="TypeScript JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2X4H0vnwNUpQ2VLlO21Ovyd7esC" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "valeria",
    "last_opened_file_path": "/Users/alexanderkovalenko/WebstormProjects/foosball-tournament-frontend/src/assets",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "vcs.Git",
    "ts.external.directory.path": "/Users/valeria/Desktop/hack-2023-october/foosball-tournament-frontend/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/assets" />
      <recent name="$PROJECT_DIR$/src/assets/icons" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.start" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7f4a24e0-a5e9-468f-b80d-58fd493c4a4e" name="Changes" comment="" />
      <created>1697881212566</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697881212566</updated>
      <workItem from="1697881215027" duration="2079000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="LAST_COMMIT_MESSAGE" value="" />
  </component>
</project>